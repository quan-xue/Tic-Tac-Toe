from __future__ import print_function 

from IPython.display import clear_output
#Creating the board
def display_board(board):
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('-----------')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('-----------')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])
    

#Asking for player name
def player_name():
    player1 = raw_input('Enter Player 1 name: ')
    player2 = raw_input('Enter Player 2 name: ')
    return(player1,player2)

#Asking for player input
def player_input(player1):
    marker = ''
    while not (marker == 'X' or marker == 'O'):
        marker = raw_input(player1+', choose X or O')
    if marker == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X')

#Placing position onto board
def place_position(board,marker,position):
    board[position]=marker

#Check win
def check_win(board,marker):
    return((board[7]==board[8] and board[8]==board[9] and board[9]==marker) or #top across
           (board[4]==board[5] and board[5]==board[6] and board[6]==marker) or #middle across
           (board[1]==board[2] and board[2]==board[3] and board[3]==marker) or #bottom across
           (board[7]==board[5] and board[5]==board[3] and board[3]==marker) or #top left to bottom right diagonal
           (board[1]==board[5] and board[5]==board[9] and board[9]==marker) or #bottom left to top right diagonal
           (board[1]==board[4] and board[4]==board[7] and board[7]==marker) or #left vertical
           (board[2]==board[5] and board[5]==board[8] and board[8]==marker) or #middle vertical
           (board[3]==board[6] and board[6]==board[9] and board[9]==marker)) #right vertical

#Randomly assign player sequence
import random
def choose_first(player1, player2):
    first = random.randint(1,2)
    if first==1:
        print(player1+' goes first.')
    else:
        print(player2+' goes first.')
    return first

#Check if space is available
def space_check(board,position):
    return(board[position]==' ')

#Check if board is full
def board_check(board):
    return ' ' in board

#Player choosing where to place marker
def choose_position():
    position = 0
    while position not in range(1,10) or not space_check(board,position):
        try:
            position = int(raw_input('Choose your position (1-9):'))
        except:
            print("Choose your position (1-9):")
    return position

#Choose whether to replay
def replay():
    return raw_input('Another game? (y/n)').startswith('y')

#Game starts!
import time
print("Welcome to Tic Tac Toe! Let's go over the rules real quick.")
time.sleep(3)
print("Select a number from 1-9 which represents the cell you would like in the grid shown below.")
time.sleep(3)

instructions = [str(x) for x in range(0,10)]
display_board(instructions)
player1, player2 = player_name()
while True:
    #Creating the board
    board=[" "]*10
    #Setting up the game
    marker1, marker2 = player_input(player1)
    turn = choose_first(player1,player2)
    game_end = False
    while game_end is False:
        if turn==1:
            #Player 1 plays
            print(player1+',it is your turn.')
            display_board(board)
            position = choose_position()
            clear_output()
            place_position(board,marker1,position)
            turn=2
            #Check if player has won the game
            if check_win(board,marker1):
                game_end = True
                display_board(board)
                print('Congratulations '+ player1+', you won!')
                game_end = True
            #Check if there is a draw
            if board_check(board) is False:
                print('It is a tie')
                game_end = True
            
        else:
            #Player 2 plays
            print(player2+',it is your turn.')
            display_board(board)
            position = choose_position()
            clear_output()
            place_position(board,marker2,position)
            turn=1
            if check_win(board,marker2):
                game_end = True
                display_board(board)
                print('Congratulations '+ player2+', you won!')
                game_end = True
            if board_check(board) is False:
                print('It is a tie')
                game_end = True
    if not replay():
        print('Thanks for playing!')
        break
